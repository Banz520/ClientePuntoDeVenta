<Application x:Class="ClientePuntoDeVenta.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:ClientePuntoDeVenta"
             StartupUri="MainWindow.xaml">
    <Application.Resources>

        <!-- Definición de colores -->
        <Color x:Key="Fondo_Color">#0D0D0D</Color>
        <Color x:Key="Botones_Color">#1E90FF</Color>
        <Color x:Key="Barra_Color">#0D3D6D</Color>
        <Color x:Key="CerrarVentana_Color">#FF0099</Color>
        <Color x:Key="Minimizar_Color">#0A2D50</Color>
        <Color x:Key="Aceptar_Color">#00FF85</Color>


        <!-- Definición de pinceles basados en los colores -->
        <SolidColorBrush x:Key="Fondo" Color="{StaticResource Fondo_Color}"/>
        <SolidColorBrush x:Key="Botones" Color="{StaticResource Botones_Color}"/>
        <SolidColorBrush x:Key="Barra" Color="{StaticResource Barra_Color}"/>
        <SolidColorBrush x:Key="Cerrar" Color="{StaticResource CerrarVentana_Color}"/>
        <SolidColorBrush x:Key="Minimizar" Color="{StaticResource Minimizar_Color}"/>
        <SolidColorBrush x:Key="Aceptar" Color="{StaticResource Aceptar_Color}"/>

        <!-- Estilo botones menu principal -->
        <Style TargetType="Button" x:Key="BotonAzul">
            <Setter Property="Background" Value="{StaticResource Botones}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="#114D8A"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="Height" Value="60"/>
            <Setter Property="Width" Value="220"/>
            <Setter Property="Margin" Value="10"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" 
                         Background="{TemplateBinding Background}"
                         BorderBrush="{TemplateBinding BorderBrush}"
                         BorderThickness="{TemplateBinding BorderThickness}"
                         CornerRadius="8">
                            <Grid>
                                <Rectangle x:Name="hoverEffect" Fill="#20FFFFFF" Opacity="0" RadiusX="8" RadiusY="8"/>
                                <ContentPresenter x:Name="contentPresenter" 
                                         ContentTemplate="{TemplateBinding ContentTemplate}"
                                         Content="{TemplateBinding Content}"
                                         HorizontalAlignment="Center"
                                         VerticalAlignment="Center"
                                         Margin="{TemplateBinding Padding}"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource Barra}"/>
                                <Setter Property="BorderBrush" Value="{StaticResource Minimizar}"/>
                                <Setter TargetName="hoverEffect" Property="Opacity" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="{StaticResource Cerrar}"/>
                                <Setter Property="BorderBrush" Value="#9C27B0"/>
                                <Setter TargetName="hoverEffect" Property="Opacity" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Estilo para la barra de título -->
        <Style x:Key="TitleBarStyle" TargetType="DockPanel">
            <Setter Property="Height" Value="60"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Background" Value="{StaticResource Barra}"/>
        </Style>

        <!-- Estilo para botones de control de ventana -->
        <Style x:Key="WindowControlButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Width" Value="60"/>
            <Setter Property="Height" Value="60"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- Boton Aceptar -->
        <Style x:Key="BotonAceptar" TargetType="Button">
            <Setter Property="Width" Value="300"/>
            <Setter Property="Height" Value="80"/>
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0,40,0,0"/>
            <Setter Property="Background" Value="{StaticResource Aceptar}"/>
            <Setter Property="BorderBrush" Value="White"/>
            <Setter Property="Foreground" Value="White"/>
         
            <Setter Property="Template">
                
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- Plantilla Input -->
        <Style x:Key="TextboxGenerico" TargetType="TextBox">
            <Setter Property="Width" Value="300"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Background" Value="{StaticResource Barra}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="{StaticResource Minimizar}"/>
            <Setter Property="CaretBrush" Value="White"/>
        </Style>

        <!-- Estilo modular para DataGrid -->
        <Style x:Key="DataGridBaseEstilo" TargetType="DataGrid">
            <Setter Property="Background" Value="{StaticResource Fondo}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="{StaticResource Barra}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="RowBackground" Value="{StaticResource Fondo}"/>
            <Setter Property="AlternatingRowBackground" Value="#1A1A2A"/>
            <Setter Property="GridLinesVisibility" Value="None"/>
            <Setter Property="HeadersVisibility" Value="Column"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="SelectionMode" Value="Single"/>
            <Setter Property="SelectionUnit" Value="FullRow"/>
            <Setter Property="AutoGenerateColumns" Value="False"/>
            <Setter Property="CanUserAddRows" Value="False"/>
            <Setter Property="CanUserDeleteRows" Value="False"/>
            <Setter Property="CanUserResizeRows" Value="False"/>
            <Setter Property="ColumnHeaderHeight" Value="35"/>
            <Setter Property="RowHeight" Value="30"/>
        </Style>

        <!-- Estilo modular para encabezados de columnas -->
        <Style x:Key="DataGridEncabezadoEstilo" TargetType="DataGridColumnHeader">
            <Setter Property="Background" Value="{StaticResource Minimizar}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
        </Style>

        <!-- Estilo modular para celdas del DataGrid -->
        <Style x:Key="DataGridCeldaEstilo" TargetType="DataGridCell">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Padding" Value="10 5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="DataGridCell">
                        <Border 
                    Background="{TemplateBinding Background}" 
                    BorderBrush="{TemplateBinding BorderBrush}" 
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Padding="{TemplateBinding Padding}">
                            <ContentPresenter VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{StaticResource Aceptar}"/>
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
            </Style.Triggers>
        </Style>



    </Application.Resources>
</Application>
